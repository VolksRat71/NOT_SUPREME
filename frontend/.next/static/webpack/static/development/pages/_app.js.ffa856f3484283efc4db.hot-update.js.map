{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.ffa856f3484283efc4db.hot-update.js","sources":["webpack:///./components/Cart.js","webpack:///./components/CreateItem.js","webpack:///./components/styles/Form.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport CartStyles from './styles/CartStyles';\r\nimport Supreme from './styles/Supreme';\r\nimport CloseButton from './styles/CloseButton';\r\nimport SickButton from './styles/SickButton';\r\nimport User from './User';\r\nimport CartItem from './CreateItem';\r\n\r\nconst LOCAL_STATE_QUERY = gql`\r\n    query {\r\n        cartOpen @client\r\n    }\r\n`;\r\n\r\nconst TOGGLE_CART_MUTATION = gql`\r\n    mutation {\r\n        toggleCart @client\r\n    }\r\n`;\r\n\r\nconst Cart = () => (\r\n    <User>{({ data: { me } }) => {\r\n        if (!me) return null;\r\n        const firstName = me.name.split(\" \")[0]\r\n        return (\r\n            <Mutation mutation={TOGGLE_CART_MUTATION}>\r\n                {toggleCart => (\r\n                    <Query query={LOCAL_STATE_QUERY}>{({ data }) => (\r\n                        <CartStyles open={data.cartOpen}>\r\n                            <header>\r\n                                <CloseButton onClick={toggleCart} title=\"close\">&times;</CloseButton>\r\n                                <Supreme>{firstName.toUpperCase()}'S CART</Supreme>\r\n                                <p>You have {me.cart.length}{' '}\r\n                                item{me.cart.length === 1 ? '' : 's'}{' '}\r\n                                in your cart.</p>\r\n                            </header>\r\n                            <ul>\r\n                                {me.cart.map(item => <li key={item.id}>{item.id}</li>)}\r\n                            </ul>\r\n                            <footer>\r\n                                <p>$11.11</p>\r\n                                <SickButton>Checkout</SickButton>\r\n                            </footer>\r\n                        </CartStyles>\r\n                    )}\r\n                    </Query>\r\n                )}\r\n            </Mutation>\r\n        )\r\n    }}</User>\r\n)\r\n\r\nexport default Cart;\r\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","import React, { Component } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport Form from './styles/Form';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport Error from './ErrorMessage';\r\nimport Router from 'next/router';\r\n\r\nconst CREATE_ITEM_MUTATION = gql`\r\n    mutation CREATE_ITEM_MUTATION (\r\n        $title: String!\r\n        $description: String!\r\n        $price: Int!\r\n        $image: String\r\n        $largeImage: String\r\n    ){\r\n        createItem(\r\n            title: $title\r\n            description: $description\r\n            price: $price\r\n            image: $image\r\n            largeImage: $largeImage\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n    `\r\n\r\nclass CreateItem extends Component {\r\n    state = {\r\n        title: '',\r\n        description: '',\r\n        image: '',\r\n        largeImage: '',\r\n        price: 0\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, type, value } = e.target;\r\n        const val = type === 'number' ? parseFloat(value) : value\r\n        this.setState({ [name]: val })\r\n    }\r\n\r\n    uploadFile = async e => {\r\n        const files = e.target.files;\r\n        const data = new FormData();\r\n        data.append('file', files[0]);\r\n        data.append('upload_preset', 'notsupreme');\r\n\r\n        const res = await fetch('https://api.cloudinary.com/v1_1/notsupreme/image/upload', {\r\n            method: 'POST',\r\n            body: data,\r\n        });\r\n        const file = await res.json();\r\n        this.setState({\r\n            image: file.secure_url,\r\n            largeImage: file.eager[0].secure_url,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Mutation\r\n                mutation={CREATE_ITEM_MUTATION}\r\n                variables={this.state}>\r\n                {(createItem, { loading, error }) => (\r\n                    <Form onSubmit={async e => {\r\n                        e.preventDefault();\r\n                        const res = await createItem();\r\n                        Router.push({\r\n                            pathname: '/item',\r\n                            query: { id: res.data.createItem.id }\r\n                        })\r\n                    }}>\r\n                        <Error error={error} />\r\n                        <fieldset disabled={loading} aria-busy={loading}>\r\n                            <label htmlFor=\"file\">\r\n                                Image\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"file\"\r\n                                    name=\"file\"\r\n                                    placeholder=\"Upload an image\"\r\n                                    required\r\n                                    onChange={this.uploadFile}\r\n                                />\r\n                                {this.state.image && <img src={this.state.image} alt=\"Upload Preview\" />}\r\n                            </label>\r\n                            <label htmlFor=\"title\">\r\n                                Title\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Title\"\r\n                                    required\r\n                                    value={this.state.title}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                            <label htmlFor=\"price\">\r\n                                Price\r\n                                <input\r\n                                    type=\"number\"\r\n                                    id=\"price\"\r\n                                    name=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    required\r\n                                    value={this.state.price}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                            <label htmlFor=\"description\">\r\n                                Description\r\n                                <textarea\r\n                                    id=\"description\"\r\n                                    name=\"description\"\r\n                                    placeholder=\"Enter A Description\"\r\n                                    required\r\n                                    value={this.state.description}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                            <button\r\n                                type=\"submit\"\r\n                            >Submit</button>\r\n                        </fieldset>\r\n                    </Form>\r\n                )}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateItem;\r\nexport { CREATE_ITEM_MUTATION };","import styled, { keyframes } from 'styled-components';\r\n\r\nconst loading = keyframes`\r\n  from {\r\n    background-position: 0 0;\r\n    /* rotate: 0; */\r\n  }\r\n\r\n  to {\r\n    background-position: 100% 100%;\r\n    /* rotate: 360deg; */\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\r\n  background: rgba(0, 0, 0, 0.02);\r\n  border: 5px solid white;\r\n  padding: 20px;\r\n  font-size: 1.5rem;\r\n  line-height: 1.5;\r\n  font-weight: 600;\r\n  label {\r\n    display: block;\r\n    margin-bottom: 1rem;\r\n  }\r\n  input,\r\n  textarea,\r\n  select {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    border: 1px solid black;\r\n    &:focus {\r\n      outline: 0;\r\n      border-color: ${props => props.theme.red};\r\n    }\r\n  }\r\n  button,\r\n  input[type='submit'] {\r\n    width: auto;\r\n    background: red;\r\n    color: white;\r\n    border: 0;\r\n    font-size: 2rem;\r\n    font-weight: 600;\r\n    padding: 0.5rem 1.2rem;\r\n  }\r\n  fieldset {\r\n    border: 0;\r\n    padding: 0;\r\n\r\n    &[disabled] {\r\n      opacity: 0.5;\r\n    }\r\n    &::before {\r\n      height: 10px;\r\n      content: '';\r\n      display: block;\r\n      background-image: linear-gradient(to right, #ff3019 0%, #e2b04a 50%, #ff3019 100%);\r\n    }\r\n    &[aria-busy='true']::before {\r\n      background-size: 50% auto;\r\n      animation: ${loading} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Form;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AADA;AAuBA;AA7BA;AACA;AA+BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AAFA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAgBA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1DA;AAkEA;;;;AAvGA;AACA;AAyGA;;;;;;;;;;;;;ACtIA;AAAA;AAAA;AAEA;AAYA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAiCA;;;;A","sourceRoot":""}