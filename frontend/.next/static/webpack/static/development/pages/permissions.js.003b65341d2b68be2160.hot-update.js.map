{"version":3,"file":"static/webpack/static\\development\\pages\\permissions.js.003b65341d2b68be2160.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query, Mutation } from 'react-apollo';\r\nimport Error from './ErrorMessage';\r\nimport gql from 'graphql-tag';\r\nimport Table from './styles/Table';\r\nimport SickButton from './styles/SickButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst possiblePermissions = [\r\n    'ADMIN',\r\n    'USER',\r\n    'ITEMCREATE',\r\n    'ITEMUPDATE',\r\n    'ITEMDELETE',\r\n    'PERMISSIONUPDATE',\r\n];\r\n\r\nconst UPDATE_PERMISSIONS_MUTATION = gql`\r\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\r\n    updatePermissions(permissions: $permissions, userId: $userId) {\r\n      id\r\n      permissions\r\n      name\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n  query {\r\n    users {\r\n      id\r\n      name\r\n      email\r\n      permissions\r\n    }\r\n  }\r\n`;\r\n\r\nconst Permissions = props => (\r\n    <Query query={ALL_USERS_QUERY}>\r\n        {({ data, loading, error }) => (\r\n            <>\r\n                <Error error={error} />\r\n                <>\r\n                    <h2>Manage Permissions</h2>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\r\n                                <th>UPDATE PERMISSIONS</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{data.users && data.users.map(user => <UserPermissions user={user} key={user.id} />)}</tbody>\r\n                    </Table>\r\n                </>\r\n            </>\r\n        )}\r\n    </Query>\r\n);\r\n\r\nclass UserPermissions extends React.Component {\r\n    static propTypes = {\r\n        user: PropTypes.shape({\r\n            name: PropTypes.string,\r\n            email: PropTypes.string,\r\n            id: PropTypes.string,\r\n            permissions: PropTypes.array,\r\n        }).isRequired,\r\n    };\r\n\r\n    state = {\r\n        permissions: this.props.user.permissions,\r\n    };\r\n\r\n    handlePermissionChange = (e) => {\r\n        const checkbox = e.target;\r\n        // take a copy of the current permissions\r\n        let updatedPermissions = [...this.state.permissions];\r\n        // figure out if we need to remove or add this permission\r\n        if (checkbox.checked) {\r\n            // add it in!\r\n            updatedPermissions.push(checkbox.value);\r\n        } else {\r\n            updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\r\n        }\r\n        this.setState({ permissions: updatedPermissions });\r\n    };\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n        return (\r\n            <Mutation\r\n                mutation={UPDATE_PERMISSIONS_MUTATION}\r\n                variables={{\r\n                    permissions: this.state.permissions,\r\n                    userId: this.props.user.id,\r\n                }}\r\n            >\r\n                {(updatePermissions, { loading, error }) => (\r\n                    <>\r\n                        {error && <tr><td colspan=\"8\"><Error error={error} /></td></tr>}\r\n                        <tr>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            {possiblePermissions.map(permission => (\r\n                                <td key={permission}>\r\n                                    <label htmlFor={`${user.id}-permission-${permission}`}>\r\n                                        <input\r\n                                            id={`${user.id}-permission-${permission}`}\r\n                                            type=\"checkbox\"\r\n                                            checked={this.state.permissions.includes(permission)}\r\n                                            value={permission}\r\n                                            onChange={this.handlePermissionChange}\r\n                                        />\r\n                                    </label>\r\n                                </td>\r\n                            ))}\r\n                            <td>\r\n                                <SickButton type=\"button\" disabled={loading} onClick={updatePermissions}>\r\n                                    Updat{loading ? 'ing' : 'e'}\r\n                                </SickButton>\r\n                            </td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n                }\r\n            </Mutation>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Permissions;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAWA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAFA;AACA;AAuBA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AA8BA;;;;AApEA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAqEA;;;;A","sourceRoot":""}