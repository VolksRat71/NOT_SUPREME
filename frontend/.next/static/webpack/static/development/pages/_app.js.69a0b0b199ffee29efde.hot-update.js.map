{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.69a0b0b199ffee29efde.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Downshift, { resetIdCounter } from 'downshift';\r\nimport Router from 'next/router';\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport debounce from 'lodash.debounce';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\r\n\r\nconst SEARCH_ITEMS_QUERY = gql`\r\n    query SEARCH_ITEMS_QUERY($searchTerm: String!) {\r\n        items(where: {\r\n            OR : [\r\n            {title_contains: $searchTerm},\r\n            {description_contains: $searchTerm}\r\n            ]\r\n        }) {\r\n            id\r\n            image\r\n            title\r\n        }\r\n    }\r\n`;\r\n\r\nfunction routeToItem(item) {\r\n    Router.push({\r\n        pathname: '/item',\r\n        query: {\r\n            id: item.id\r\n        }\r\n    })\r\n};\r\n\r\nclass AutoComplete extends Component {\r\n    state = {\r\n        items: [],\r\n        loading: false\r\n    }\r\n\r\n    onChange = debounce(\r\n        async (e, client) => {\r\n            this.setState({ loading: true });\r\n\r\n            const res = await client.query({\r\n                query: SEARCH_ITEMS_QUERY,\r\n                variables: {\r\n                    searchTerm: e.target.value\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                items: res.data.items,\r\n                loading: false\r\n            });\r\n        }, 350);\r\n\r\n    render() {\r\n        resetIdCounter();\r\n        return (\r\n            <SearchStyles>\r\n                <Downshift\r\n                    onChange={routeToItem}\r\n                    itemToString={item => item === null ? '' : item.title}\r\n                >\r\n                    {({\r\n                        getInputProps,\r\n                        getItemProps,\r\n                        isOpen,\r\n                        inputValue,\r\n                        highlightedIndex\r\n                    }) => (\r\n                        <div>\r\n                            <ApolloConsumer>\r\n                                {client => (\r\n                                    <input\r\n                                        {...getInputProps({\r\n                                            type: 'search',\r\n                                            placeholder: \"Search For An Item\",\r\n                                            id: 'search',\r\n                                            className: this.state.loading ? 'loading' : '',\r\n                                            onChange: e => {\r\n                                                e.persist();\r\n                                                this.onChange(e, client)\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                )}\r\n                            </ApolloConsumer>\r\n                            {isOpen && (\r\n                                <DropDown>\r\n                                    {this.state.items.map((item, index) => (\r\n                                        <DropDownItem\r\n                                            {...getItemProps({ item })}\r\n                                            key={item.id}\r\n                                            highlighted={\r\n                                                index === highlightedIndex\r\n                                            }\r\n                                        >\r\n                                            <img\r\n                                                width=\"50\"\r\n                                                src={item.image}\r\n                                                alt={item.title}\r\n                                            />\r\n                                            {item.title}\r\n                                        </DropDownItem>\r\n                                    ))}\r\n                                    {!this.state.items.length &&\r\n                                        !this.state.loading && (\r\n                                            (<DropDownItem>\r\n                                                Nothing found for {inputValue}\r\n                                            </DropDownItem>)\r\n                                        )}\r\n                                </DropDown>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Downshift>\r\n            </SearchStyles >\r\n        )\r\n    }\r\n}\r\n\r\nexport default AutoComplete;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AADA;AAFA;AACA;AAJA;AAGA;AACA;AAMA;AACA;AACA;AAFA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;;;;;;AAgBA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5CA;AAuDA;;;;AAtFA;AACA;AAwFA;;;;A","sourceRoot":""}