{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.5686cfe733c7175902f7.hot-update.js","sources":["webpack:///./components/TakeMyMoney.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { Mutation } from 'react-apollo';\r\nimport Router from 'next/router';\r\nimport NProgress from 'nprogress';\r\nimport PropTypes from 'prop-types';\r\nimport gql from 'graphql-tag';\r\nimport calcTotalPrice from '../lib/calcTotalPrice';\r\nimport Error from './ErrorMessage';\r\nimport User, { CURRENT_USER_QUERY } from './User';\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION($token: String!){\r\n        createOrder(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                title\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nfunction totalItems(cart) {\r\n    return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0)\r\n}\r\n\r\nclass TakeMyMoney extends Component {\r\n    onToken = async (res, createOrder) => {\r\n        NProgress.start()\r\n        // Manually call the mutation once we have the strip token\r\n        const order = await createOrder({\r\n            variables: {\r\n                token: res.id\r\n            }\r\n        }).catch(err => {\r\n            alert(err.message)\r\n        })\r\n        Router.push({\r\n            pathname: '/orders',\r\n            query: { id: order.createOrder.id }\r\n        })\r\n        NProgress.done()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <User>\r\n                    {({ data: { me } }) => (\r\n                        <Mutation\r\n                            mutation={CREATE_ORDER_MUTATION}\r\n                            refetchQueries={\r\n                                [{ query: CURRENT_USER_QUERY }]\r\n                            }\r\n                        >{createOrder => (\r\n                            <StripeCheckout\r\n                                amount={calcTotalPrice(me.cart)}\r\n                                name=\"NOT SUPREME\"\r\n                                description={`Order of ${totalItems(me.cart)} item${totalItems(me.cart) === 1 ? '' : 's'}`}\r\n                                image={me.cart.length && me.cart[0].item && me.cart[0].item.image}\r\n                                stripeKey=\"pk_test_51I4xX7GXKle0o1lB9heJfv9N1qu0xRRtvLwtKPJCzCSRM3pbRtZ4hjKMYWv1qEHNEn5C4vCUixSpG0hiw4XoXAXx00AD2ilOE8\"\r\n                                currency=\"USD\"\r\n                                email={me.email}\r\n                                token={res => this.onToken(res, createOrder)}\r\n                            >{this.props.children}</StripeCheckout>\r\n                        )}</Mutation>\r\n                    )}\r\n                </User>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeMyMoney;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AADA;AADA;AAKA;AACA;AACA;AAVA;AAGA;AAOA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAgBA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AAsBA;;;;AA5CA;AACA;AA8CA;;;;A","sourceRoot":""}