{"version":3,"file":"static/webpack/static\\development\\pages\\orders.js.4856b6ef87f073c14ec2.hot-update.js","sources":["webpack:///./components/Order.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Query } from 'react-apollo';\r\nimport { format } from 'date-fns';\r\nimport Head from 'next/head';\r\nimport gql from 'graphql-tag';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport OrderStyles from './styles/OrderStyles'\r\nimport Error from './ErrorMessage';\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n    query SINGLE_ORDER_QUERY($id: ID!) {\r\n        order(id: $id) {\r\n            id\r\n            charge\r\n            total\r\n            createdAt\r\n            user {\r\n                id\r\n            }\r\n            items {\r\n                id\r\n                title\r\n                description\r\n                price\r\n                image\r\n                quantity\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nclass Order extends Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Query\r\n                query={SINGLE_ORDER_QUERY}\r\n                variables={{\r\n                    id: this.props.id\r\n                }}\r\n            >{({ data, error, loading }) => {\r\n                if (error) return <Error error={error} />\r\n                if (loading) return <p>Loading...</p>\r\n                const order = data.order\r\n                return (\r\n                    <OrderStyles>\r\n                        <Head>\r\n                            <title>NOT SUPREME | Order {order.id}</title>\r\n                        </Head>\r\n                        <p>\r\n                            <span>Order ID:</span>\r\n                            <span>{order.id}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>Charge:</span>\r\n                            <span>{order.charge}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>Date:</span>\r\n                            <span>{format(order.createdAt, 'MMMM dd, YYYY hh:mma')}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>Item Count:</span>\r\n                            <span>{order.items.length}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>Total:</span>\r\n                            <span>{formatMoney(order.total)}</span>\r\n                        </p>\r\n                        <div className=\"item\">\r\n                            {order.items.map(item => (\r\n                                <div className=\"order-item\" key={item.id}>\r\n                                    <img src={item.image} alt={item.title} />\r\n                                    <div className=\"item-details\">Hello</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </OrderStyles>\r\n                )\r\n            }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAqBA;;;;;;;;;;;;;AAKA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AAGA;;;;AAtDA;AACA;AADA;AAEA;AADA;AACA;AAuDA;;;;A","sourceRoot":""}